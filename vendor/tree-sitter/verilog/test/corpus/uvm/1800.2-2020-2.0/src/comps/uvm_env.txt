============================================
uvm/1800.2-2020-2.0/src/comps/uvm_env
============================================

//
//------------------------------------------------------------------------------
// Copyright 2007-2018 Cadence Design Systems, Inc.
// Copyright 2007-2011 Mentor Graphics Corporation
// Copyright 2015-2020 NVIDIA Corporation
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//
// CLASS -- NODOCS -- uvm_env
//
// The base class for hierarchical containers of other components that
// together comprise a complete environment. The environment may
// initially consist of the entire testbench. Later, it can be reused as
// a sub-environment in even larger system-level environments.
//------------------------------------------------------------------------------

// @uvm-ieee 1800.2-2020 auto 13.3.1
virtual class uvm_env extends uvm_component;

  `uvm_component_abstract_utils(uvm_env)
  
  // Function -- NODOCS -- new
  //
  // Creates and initializes an instance of this class using the normal
  // constructor arguments for <uvm_component>: ~name~ is the name of the
  // instance, and ~parent~ is the handle to the hierarchical parent, if any.

  // @uvm-ieee 1800.2-2020 auto 13.3.2
  function new (string name="env", uvm_component parent=null);
    super.new(name,parent);
  endfunction

endclass

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_type
      (simple_identifier))
    (class_item
      (text_macro_usage
        (simple_identifier)
        (list_of_actual_arguments
          (actual_argument
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (class_constructor_declaration
          (class_constructor_arg_list
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)
                (expression
                  (primary
                    (primary_literal
                      (string_literal
                        (quoted_string)))))))
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)
                (expression
                  (primary)))))
          (list_of_arguments
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))))
