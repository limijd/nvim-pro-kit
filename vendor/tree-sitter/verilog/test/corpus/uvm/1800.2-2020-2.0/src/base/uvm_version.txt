============================================
uvm/1800.2-2020-2.0/src/base/uvm_version
============================================

//----------------------------------------------------------------------
// Copyright 2010 AMD
// Copyright 2007-2018 Cadence Design Systems, Inc.
// Copyright 2017 Cisco Systems, Inc.
// Copyright 2011-2012 Cypress Semiconductor Corp.
// Copyright 2007-2013 Mentor Graphics Corporation
// Copyright 2013-2020 NVIDIA Corporation
// Copyright 2012 Paradigm Works
// Copyright 2010-2011 Synopsys, Inc.
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//----------------------------------------------------------------------

`ifndef UVM_VERSION_SVH
`define UVM_VERSION_SVH

parameter string UVM_VERSION_STRING = "Accellera:1800.2-2020:UVM:2.0";

function string uvm_revision_string();
  return UVM_VERSION_STRING;
endfunction

`endif // UVM_VERSION_SVH

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (conditional_compilation_directive
    (ifdef_condition
      (simple_identifier)))
  (text_macro_definition
    (text_macro_name
      (simple_identifier)))
  (parameter_declaration
    (data_type_or_implicit
      (data_type))
    (list_of_param_assignments
      (param_assignment
        (simple_identifier)
        (constant_param_expression
          (constant_mintypmax_expression
            (constant_expression
              (constant_primary
                (primary_literal
                  (string_literal
                    (quoted_string))))))))))
  (function_declaration
    (function_body_declaration
      (data_type_or_void
        (data_type))
      name: (simple_identifier)
      (function_statement_or_null
        (function_statement
          (statement
            (statement_item
              (jump_statement
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))))))
  (conditional_compilation_directive)
  (comment))
