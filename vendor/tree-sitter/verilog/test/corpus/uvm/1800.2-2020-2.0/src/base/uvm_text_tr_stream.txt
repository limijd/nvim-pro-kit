============================================
uvm/1800.2-2020-2.0/src/base/uvm_text_tr_stream
============================================

//
//-----------------------------------------------------------------------------
// Copyright 2007-2018 Cadence Design Systems, Inc.
// Copyright 2017 Cisco Systems, Inc.
// Copyright 2007-2009 Mentor Graphics Corporation
// Copyright 2018-2020 NVIDIA Corporation
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//-----------------------------------------------------------------------------


//------------------------------------------------------------------------------
//
// CLASS: uvm_text_tr_stream
//
// The ~uvm_text_tr_stream~ is the default stream implementation for the
// <uvm_text_tr_database>.  
//
//                     
// @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2

class uvm_text_tr_stream extends uvm_tr_stream;

   // Variable- m_text_db
   // Internal reference to the text-based backend
   local uvm_text_tr_database m_text_db;
   
   `uvm_object_utils_begin(uvm_text_tr_stream)
   `uvm_object_utils_end

   // Function: new
   // Constructor
   //
   // Parameters:
   // name - Instance name
   function new(string name="unnamed-uvm_text_tr_stream");
      super.new(name);
   endfunction : new

   // Group: Implementation Agnostic API

   // Function: do_open
   // Callback triggered via <uvm_tr_database::open_stream>.
   //
   // @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2
   protected virtual function void do_open(uvm_tr_database db,
                                           string scope,
                                           string stream_type_name);
      $cast(m_text_db, db);
      if (m_text_db.open_db())
        $fdisplay(m_text_db.m_file, 
                  "  CREATE_STREAM @%0t {NAME:%s T:%s SCOPE:%s STREAM:%0d}",
                  $time,
                  this.get_name(),
                  stream_type_name,
                  scope,
                  this.get_handle());
   endfunction : do_open

   // Function: do_close
   // Callback triggered via <uvm_tr_stream::close>.
   //
   // @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2
   protected virtual function void do_close();
      if (m_text_db.open_db())
        $fdisplay(m_text_db.m_file,
                  "  CLOSE_STREAM @%0t {NAME:%s T:%s SCOPE:%s STREAM:%0d}",
                  $time,
                  this.get_name(),
                  this.get_stream_type_name(),
                  this.get_scope(),
                  this.get_handle());
   endfunction : do_close
      
   // Function: do_free
   // Callback triggered via <uvm_tr_stream::free>.
   //
   // @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2
   protected virtual function void do_free();
      if (m_text_db.open_db())
        $fdisplay(m_text_db.m_file, 
                  "  FREE_STREAM @%0t {NAME:%s T:%s SCOPE:%s STREAM:%0d}",
                  $time,
                  this.get_name(),
                  this.get_stream_type_name(),
                  this.get_scope(),
                  this.get_handle());
      m_text_db = null;
      return;
   endfunction : do_free
   
   // Function: do_open_recorder
   // Marks the beginning of a new record in the stream
   //
   // Text-backend specific implementation.
   //
   // @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2
   protected virtual function uvm_recorder do_open_recorder(string name,
                                                           time   open_time,
                                                           string type_name);
      if (m_text_db.open_db()) begin
         return uvm_text_recorder::type_id::create(name);
      end

      return null;
   endfunction : do_open_recorder

endclass : uvm_text_tr_stream

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_type
      (simple_identifier))
    (comment)
    (comment)
    (class_item
      (class_property
        (class_item_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (simple_identifier)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (class_item
      (text_macro_usage
        (simple_identifier)
        (list_of_actual_arguments
          (actual_argument
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))
    (class_item
      (text_macro_usage
        (simple_identifier)))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (class_constructor_declaration
          (class_constructor_arg_list
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)
                (expression
                  (primary
                    (primary_literal
                      (string_literal
                        (quoted_string))))))))
          (list_of_arguments
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier))
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier))
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (system_tf_call
                          (system_tf_identifier)
                          (list_of_arguments
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (system_tf_call
                                  (system_tf_identifier)
                                  (list_of_arguments
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier)
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (primary_literal
                                          (string_literal
                                            (quoted_string)))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (system_tf_call
                                              (system_tf_identifier))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))))))))))))))
            (simple_identifier)))))
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (system_tf_call
                                  (system_tf_identifier)
                                  (list_of_arguments
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier)
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (primary_literal
                                          (string_literal
                                            (quoted_string)))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (system_tf_call
                                              (system_tf_identifier))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))))))))))))))
            (simple_identifier)))))
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (system_tf_call
                                  (system_tf_identifier)
                                  (list_of_arguments
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier)
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (primary_literal
                                          (string_literal
                                            (quoted_string)))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (system_tf_call
                                              (system_tf_identifier))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))
                                    (expression
                                      (primary
                                        (function_subroutine_call
                                          (subroutine_call
                                            (method_call
                                              (implicit_class_handle)
                                              (method_call_body
                                                name: (simple_identifier)))))))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement)))))
            (simple_identifier)))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier))
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (integer_atom_type)))
                name: (simple_identifier))
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (seq_block
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (jump_statement
                                      (expression
                                        (primary
                                          (function_subroutine_call
                                            (subroutine_call
                                              (method_call
                                                (class_type
                                                  (simple_identifier)
                                                  (simple_identifier))
                                                (method_call_body
                                                  name: (simple_identifier)
                                                  arguments: (list_of_arguments
                                                    (expression
                                                      (primary
                                                        (hierarchical_identifier
                                                          (simple_identifier))))))))))))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary)))))))
            (simple_identifier)))))
    (simple_identifier)))
