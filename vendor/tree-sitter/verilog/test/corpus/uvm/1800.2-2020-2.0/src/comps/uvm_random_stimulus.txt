============================================
uvm/1800.2-2020-2.0/src/comps/uvm_random_stimulus
============================================

//
//------------------------------------------------------------------------------
// Copyright 2007-2018 Cadence Design Systems, Inc.
// Copyright 2017 Cisco Systems, Inc.
// Copyright 2022 Marvell International Ltd.
// Copyright 2007-2021 Mentor Graphics Corporation
// Copyright 2015-2020 NVIDIA Corporation
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// CLASS  -- NODOCS -- uvm_random_stimulus #(T)
//
// A general purpose unidirectional random stimulus class.
//
// The uvm_random_stimulus class generates streams of T transactions. These streams
// may be generated by the randomize method of T, or the randomize method of
// one of its subclasses.  The stream may go indefinitely, until terminated
// by a call to stop_stimulus_generation, or we may specify the maximum number
// of transactions to be generated.
//
// By using inheritance, we can add directed initialization or tidy up after
// random stimulus generation. Simply extend the class and define the run task,
// calling super.run() when you want to begin the random stimulus phase of
// simulation.
//
// While very useful in its own right, this component can also be used as a
// template for defining other stimulus generators, or it can be extended to
// add additional stimulus generation methods and to simplify test writing.
//
//------------------------------------------------------------------------------
//@uvm_compat
class uvm_random_stimulus #(type T=uvm_transaction) extends uvm_component;

  const static string type_name = "uvm_random_stimulus #(T)";

  typedef uvm_random_stimulus #(T) this_type;
  `uvm_component_param_utils(this_type)

  // Port -- NODOCS -- blocking_put_port
  //
  // The blocking_put_port is used to send the generated stimulus to the rest
  // of the testbench.
                                                      
  uvm_blocking_put_port #(T) blocking_put_port;


  // Function -- NODOCS -- new
  //
  // Creates a new instance of a specialization of this class.
  // Also, displays the random state obtained from a get_randstate call.
  // In subsequent simulations, set_randstate can be called with the same
  // value to reproduce the same sequence of transactions.

  function new(string name, uvm_component parent);

    super.new(name, parent);

    blocking_put_port=new("blocking_put_port", this);
    
    uvm_report_info("uvm_stimulus", {"rand state is ", get_randstate()});

  endfunction


  local bit m_stop;


  // Function -- NODOCS -- generate_stimulus
  //
  // Generate up to max_count transactions of type T.
  // If t is not specified, a default instance of T is allocated and used.
  // If t is specified, that transaction is used when randomizing. It must
  // be a subclass of T.
  //
  // max_count is the maximum number of transactions to be
  // generated. A value of zero indicates no maximum - in
  // this case, generate_stimulus will go on indefinitely
  // unless stopped by some other process
  //
  // The transactions are cloned before they are sent out 
  // over the blocking_put_port
//@uvm_compat
  virtual task generate_stimulus(T t=null, int max_count=0);

    T temp;
    
    if (t == null)
      t = new;
    
    for (int i=0; (max_count == 0 || i < max_count) && !m_stop; i++) begin

       if (! t.randomize() )
          uvm_report_warning ("RANDFL", "Randomization failed in generate_stimulus");
      
       $cast(temp, t.clone());
       uvm_report_info("stimulus generation", temp.convert2string()); 
       blocking_put_port.put(temp);
    end
  endtask
  

  // Function -- NODOCS --  stop_stimulus_generation
  //
  // Stops the generation of stimulus.
  // If a subclass of this method has forked additional
  // processes, those processes will also need to be
  // stopped in an overridden version of this method
//@uvm_compat  
  virtual function void stop_stimulus_generation;
    m_stop = 1;
  endfunction
  

  virtual function string get_type_name();
    return type_name;
  endfunction

endclass : uvm_random_stimulus

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (parameter_port_list
      (parameter_port_declaration
        (type_parameter_declaration
          (list_of_type_assignments
            (type_assignment
              name: (simple_identifier)
              value: (simple_identifier))))))
    (class_type
      (simple_identifier))
    (class_item
      (class_property
        (class_item_qualifier)
        (data_type)
        (simple_identifier)
        (constant_expression
          (constant_primary
            (primary_literal
              (string_literal
                (quoted_string)))))))
    (class_item
      (class_property
        (data_declaration
          (type_declaration
            (class_type
              (simple_identifier)
              (parameter_value_assignment
                (list_of_parameter_value_assignments
                  (ordered_parameter_assignment
                    (param_expression
                      (mintypmax_expression
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))
            type_name: (simple_identifier)))))
    (class_item
      (text_macro_usage
        (simple_identifier)
        (list_of_actual_arguments
          (actual_argument
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_property
        (data_declaration
          (data_type_or_implicit
            (data_type
              (class_type
                (simple_identifier)
                (parameter_value_assignment
                  (list_of_parameter_value_assignments
                    (ordered_parameter_assignment
                      (param_expression
                        (mintypmax_expression
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))))))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (class_constructor_declaration
          (class_constructor_arg_list
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)))
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier))))
          (list_of_arguments
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (function_statement_or_null
            (function_statement
              (statement
                (statement_item
                  (blocking_assignment
                    (hierarchical_identifier
                      (simple_identifier))
                    (class_new
                      (list_of_arguments
                        (expression
                          (primary
                            (primary_literal
                              (string_literal
                                (quoted_string)))))
                        (expression
                          (primary)))))))))
          (function_statement_or_null
            (function_statement
              (statement
                (statement_item
                  (subroutine_call_statement
                    (subroutine_call
                      (tf_call
                        (hierarchical_identifier
                          (simple_identifier))
                        (list_of_arguments
                          (expression
                            (primary
                              (primary_literal
                                (string_literal
                                  (quoted_string)))))
                          (expression
                            (primary
                              (concatenation
                                (expression
                                  (primary
                                    (primary_literal
                                      (string_literal
                                        (quoted_string)))))
                                (expression
                                  (primary
                                    (function_subroutine_call
                                      (subroutine_call
                                        (tf_call
                                          (hierarchical_identifier
                                            (simple_identifier)))))))))))))))))))))
    (class_item
      (class_property
        (class_item_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier)
        (task_declaration
          (task_body_declaration
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)
                (expression
                  (primary)))
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (integer_atom_type)))
                name: (simple_identifier)
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (statement_or_null
              (statement
                (statement_item
                  (conditional_statement
                    (cond_predicate
                      (expression
                        left: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        right: (expression
                          (primary))))
                    (statement_or_null
                      (statement
                        (statement_item
                          (blocking_assignment
                            (hierarchical_identifier
                              (simple_identifier))
                            (class_new)))))))))
            (statement_or_null
              (statement
                (statement_item
                  (loop_statement
                    (for_initialization
                      (for_variable_declaration
                        (data_type
                          (integer_atom_type))
                        (simple_identifier)
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))
                    (expression
                      left: (expression
                        (primary
                          (mintypmax_expression
                            (expression
                              left: (expression
                                left: (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                right: (expression
                                  (primary
                                    (primary_literal
                                      (integral_number
                                        (decimal_number
                                          (unsigned_number)))))))
                              right: (expression
                                left: (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                right: (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))))))))
                      right: (expression
                        operator: (unary_operator)
                        argument: (primary
                          (hierarchical_identifier
                            (simple_identifier)))))
                    (for_step
                      (inc_or_dec_expression
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (inc_or_dec_operator)))
                    (statement_or_null
                      (statement
                        (statement_item
                          (seq_block
                            (statement_or_null
                              (statement
                                (statement_item
                                  (conditional_statement
                                    (cond_predicate
                                      (expression
                                        operator: (unary_operator)
                                        argument: (primary
                                          (function_subroutine_call
                                            (subroutine_call
                                              (method_call
                                                (primary
                                                  (hierarchical_identifier
                                                    (simple_identifier)))
                                                (method_call_body
                                                  (randomize_call))))))))
                                    (statement_or_null
                                      (statement
                                        (statement_item
                                          (subroutine_call_statement
                                            (subroutine_call
                                              (tf_call
                                                (hierarchical_identifier
                                                  (simple_identifier))
                                                (list_of_arguments
                                                  (expression
                                                    (primary
                                                      (primary_literal
                                                        (string_literal
                                                          (quoted_string)))))
                                                  (expression
                                                    (primary
                                                      (primary_literal
                                                        (string_literal
                                                          (quoted_string))))))))))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (subroutine_call_statement
                                    (subroutine_call
                                      (system_tf_call
                                        (system_tf_identifier)
                                        (list_of_arguments
                                          (expression
                                            (primary
                                              (hierarchical_identifier
                                                (simple_identifier))))
                                          (expression
                                            (primary
                                              (function_subroutine_call
                                                (subroutine_call
                                                  (method_call
                                                    (primary
                                                      (hierarchical_identifier
                                                        (simple_identifier)))
                                                    (method_call_body
                                                      name: (simple_identifier))))))))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (subroutine_call_statement
                                    (subroutine_call
                                      (tf_call
                                        (hierarchical_identifier
                                          (simple_identifier))
                                        (list_of_arguments
                                          (expression
                                            (primary
                                              (primary_literal
                                                (string_literal
                                                  (quoted_string)))))
                                          (expression
                                            (primary
                                              (function_subroutine_call
                                                (subroutine_call
                                                  (method_call
                                                    (primary
                                                      (hierarchical_identifier
                                                        (simple_identifier)))
                                                    (method_call_body
                                                      name: (simple_identifier))))))))))))))
                            (statement_or_null
                              (statement
                                (statement_item
                                  (subroutine_call_statement
                                    (subroutine_call
                                      (method_call
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)))
                                        (method_call_body
                                          name: (simple_identifier)
                                          arguments: (list_of_arguments
                                            (expression
                                              (primary
                                                (hierarchical_identifier
                                                  (simple_identifier))))))))))))))))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type))
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))
    (simple_identifier)))
