============================================
uvm/1800.2-2020-2.0/src/base/uvm_resource
============================================

//----------------------------------------------------------------------
// Copyright 2010-2011 AMD
// Copyright 2015 Analog Devices, Inc.
// Copyright 2010-2018 Cadence Design Systems, Inc.
// Copyright 2017-2018 Cisco Systems, Inc.
// Copyright 2011-2012 Cypress Semiconductor Corp.
// Copyright 2017 Intel Corporation
// Copyright 2021-2022 Marvell International Ltd.
// Copyright 2010-2022 Mentor Graphics Corporation
// Copyright 2013-2022 NVIDIA Corporation
// Copyright 2010-2011 Paradigm Works
// Copyright 2014 Semifore
// Copyright 2010-2014 Synopsys, Inc.
// Copyright 2017-2018 Verific
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//----------------------------------------------------------------------




//----------------------------------------------------------------------
// Class: uvm_resource #(T)
// Implementation of uvm_resource#(T) as defined in section C.2.5.1 of
// 1800.2-2020.
//----------------------------------------------------------------------

// @uvm-ieee 1800.2-2020 auto C.2.5.1
class uvm_resource #(type T=int) extends uvm_resource_base;

  typedef uvm_resource#(T) this_type;

  // singleton handle that represents the type of this resource
  static this_type my_type = get_type();

  // Can't be rand since things like rand strings are not legal.
  protected T val;

  // Because of uvm_resource#(T)::get_type, we can't use
  // the macros.  We need to do it all manually.
  typedef uvm_object_registry#(this_type) type_id;
  virtual function uvm_object_wrapper get_object_type();
    return type_id::get();
  endfunction : get_object_type
  virtual function uvm_object create (string name="");
    this_type tmp;
    if (name=="") tmp = new();
    else tmp = new(name);
    return tmp;
  endfunction : create
  `uvm_type_name_decl($sformatf("uvm_resource#(%s)", `uvm_typename(T)))
  
  
  // @uvm-ieee 1800.2-2020 auto C.2.5.2
  function new(string name="", string scope="<not provided>"); //scope argument added for compatibility
    super.new(name,scope);
  endfunction

  virtual function string m_value_type_name();
    return `uvm_typename(T);
  endfunction : m_value_type_name
                                    
  virtual function string m_value_as_string();
    return $sformatf("%p", val);
  endfunction : m_value_as_string
                                    
  //----------------------
  // Group -- NODOCS -- Type Interface
  //----------------------
  //
  // Resources can be identified by type using a static type handle.
  // The parent class provides the virtual function interface
  // <get_type_handle>.  Here we implement it by returning the static type
  // handle.

  // Function -- NODOCS -- get_type
  //
  // Static function that returns the static type handle.  The return
  // type is this_type, which is the type of the parameterized class.

  static function this_type get_type();
    if(my_type == null)
      my_type = new();
    return my_type;
  endfunction

  // Function -- NODOCS -- get_type_handle
  //
  // Returns the static type handle of this resource in a polymorphic
  // fashion.  The return type of get_type_handle() is
  // uvm_resource_base.  This function is not static and therefore can
  // only be used by instances of a parameterized resource.

  // @uvm-ieee 1800.2-2020 auto C.2.5.3.2
  function uvm_resource_base get_type_handle();
    return get_type();
  endfunction
  
  //----------------------------
  // Group -- NODOCS -- Read/Write Interface
  //----------------------------
  //
  // <read> and <write> provide a type-safe interface for getting and
  // setting the object in the resource container.  The interface is
  // type safe because the value argument for <write> and the return
  // value of <read> are T, the type supplied in the class parameter.
  // If either of these functions is used in an incorrect type context
  // the compiler will complain.

  // Function: read
  //
  //| function T read(uvm_object accessor = null);
  //
  // This function is the implementation of the uvm_resource#(T)::read 
  // method detailed in IEEE1800.2-2020 section C.2.5.4.1
  //
  // The Accellera implementation passes ~accessor~ to <do_read> and
  // returns the result.

  // @uvm-ieee 1800.2-2020 auto C.2.5.4.1
  function T read(uvm_object accessor = null);
    return do_read(accessor);
  endfunction

  // Function: do_read
  //
  //| virtual function T do_read(uvm_object accessor);
  //
  // The ~do_read~ method is a user-definable hook that allows users customization over
  // what actions are performed during a read operation.
  //
  // If auditing, it calls uvm_resource_debug::record_read_access before 
  // returning the value.  This detail of this API is specific to the 
  // Accellera implementation and is not being considered for contribution to 1800.2
  
  //@uvm-contrib For potential contribution to 1800.2
  virtual function T do_read(uvm_object accessor);
    if (uvm_resource_options::is_auditing()) begin
       record_read_access(accessor);
    end
    return val;
  endfunction : do_read    
  
  // Function: write
  //
  //| function void write(T t, uvm_object accessor = null);
  //
  // This function is the implementation of the uvm_resource#(T)::write 
  // method detailed in IEEE1800.2-2020 section C.2.5.4.2
  //
  // The Accellera implementation passes ~t~ and ~accessor~ to <do_write>.

  // @uvm-ieee 1800.2-2020 auto C.2.5.4.2
  function void write(T t, uvm_object accessor = null);
    do_write(t, accessor);
  endfunction

  // Function: do_write
  //
  //| virtual function void do_write(T t, uvm_object accessor);
  // 
  // The ~do_write~ method is a user-definable hook that allows users customization over
  // what actions are performed during a write operation.
  //
  // If auditing, it calls uvm_resource_base::record_write_access before 
  // writing the value.  This detail of this API is specific to the 
  // Accellera implementation and is not being considered for contribution to 1800.2

  //@uvm-contrib For potential contribution to 1800.2
  virtual function void do_write(T t, uvm_object accessor);
    if(is_read_only()) begin
      uvm_report_error("resource", $sformatf("resource %s is read only -- cannot modify", get_name()));
      return;
    end

    // Set the modified bit and record the transaction only if the value
    // has actually changed.
    if(val == t)
      return;

    if (uvm_resource_options::is_auditing()) begin
       record_write_access(accessor);
    end

    // set the value and set the dirty bit
    val = t;
    modified = 1;
  endfunction : do_write
  


  // Function -- NODOCS -- get_highest_precedence
  //
  // In a queue of resources, locate the first one with the highest
  // precedence whose type is T.  This function is static so that it can
  // be called from anywhere.

  static function this_type get_highest_precedence(ref uvm_resource_types::rsrc_q_t q);

    this_type rsrc;
    this_type r;
    uvm_resource_types::rsrc_q_t tq;
    uvm_resource_base rb;
    uvm_resource_pool rp = uvm_resource_pool::get();

    if(q.size() == 0)
      return null;

    tq = new();
    rsrc = null;

    for(int i = 0; i < q.size(); ++i) begin
      if($cast(r, q.get(i))) begin
        tq.push_back(r) ;
      end
    end

    rb = rp.get_highest_precedence(tq);
    if (!$cast(rsrc, rb))
       return null;
 
    return rsrc;

  endfunction

  //@uvm-compat provided for compatibility with 1.2
  function void set_priority (uvm_resource_types::priority_e pri);
    uvm_resource_pool rp = uvm_resource_pool::get();
    rp.set_priority(this, pri);
  endfunction

endclass


----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (parameter_port_list
      (parameter_port_declaration
        (type_parameter_declaration
          (list_of_type_assignments
            (type_assignment
              name: (simple_identifier)
              value: (data_type
                (integer_atom_type)))))))
    (class_type
      (simple_identifier))
    (class_item
      (class_property
        (data_declaration
          (type_declaration
            (class_type
              (simple_identifier)
              (parameter_value_assignment
                (list_of_parameter_value_assignments
                  (ordered_parameter_assignment
                    (param_expression
                      (mintypmax_expression
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))
            type_name: (simple_identifier)))))
    (comment)
    (class_item
      (class_property
        (class_item_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (simple_identifier)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier)
              (expression
                (primary
                  (function_subroutine_call
                    (subroutine_call
                      (tf_call
                        (hierarchical_identifier
                          (simple_identifier))))))))))))
    (comment)
    (class_item
      (class_property
        (class_item_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (simple_identifier)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (comment)
    (comment)
    (class_item
      (class_property
        (data_declaration
          (type_declaration
            (class_type
              (simple_identifier)
              (parameter_value_assignment
                (list_of_parameter_value_assignments
                  (ordered_parameter_assignment
                    (param_expression
                      (mintypmax_expression
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))
            type_name: (simple_identifier)))))
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (function_subroutine_call
                            (subroutine_call
                              (method_call
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))
                                (method_call_body
                                  name: (simple_identifier))))))))))))
            (simple_identifier)))))
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)
                (expression
                  (primary
                    (primary_literal
                      (string_literal
                        (quoted_string)))))))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (primary_literal
                                (string_literal
                                  (quoted_string)))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (blocking_assignment
                              (hierarchical_identifier
                                (simple_identifier))
                              (class_new)))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (blocking_assignment
                              (hierarchical_identifier
                                (simple_identifier))
                              (class_new
                                (list_of_arguments
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))
            (simple_identifier)))))
    (class_item
      (text_macro_usage
        (simple_identifier)
        (list_of_actual_arguments
          (actual_argument
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (function_subroutine_call
                      (subroutine_call
                        (system_tf_call
                          (system_tf_identifier)
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string)))))
                            (expression
                              (text_macro_usage
                                (simple_identifier)
                                (list_of_actual_arguments
                                  (actual_argument
                                    (param_expression
                                      (mintypmax_expression
                                        (expression
                                          (primary
                                            (hierarchical_identifier
                                              (simple_identifier))))))))))))))))))))))
    (comment)
    (class_item
      (class_method
        (class_constructor_declaration
          (class_constructor_arg_list
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)
                (expression
                  (primary
                    (primary_literal
                      (string_literal
                        (quoted_string)))))))
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)
                (expression
                  (primary
                    (primary_literal
                      (string_literal
                        (quoted_string))))))))
          (comment)
          (list_of_arguments
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type))
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (text_macro_usage
                          (simple_identifier)
                          (list_of_actual_arguments
                            (actual_argument
                              (param_expression
                                (mintypmax_expression
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))))))))))))))
            (simple_identifier)))))
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type))
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (function_subroutine_call
                            (subroutine_call
                              (system_tf_call
                                (system_tf_identifier)
                                (list_of_arguments
                                  (expression
                                    (primary
                                      (primary_literal
                                        (string_literal
                                          (quoted_string)))))
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))))))))))))))
            (simple_identifier)))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (blocking_assignment
                              (hierarchical_identifier
                                (simple_identifier))
                              (class_new))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (function_subroutine_call
                            (subroutine_call
                              (tf_call
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)
                (expression
                  (primary))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (function_subroutine_call
                            (subroutine_call
                              (tf_call
                                (hierarchical_identifier
                                  (simple_identifier))
                                (list_of_arguments
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))))))))))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (seq_block
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (subroutine_call_statement
                                      (subroutine_call
                                        (tf_call
                                          (hierarchical_identifier
                                            (simple_identifier))
                                          (list_of_arguments
                                            (expression
                                              (primary
                                                (hierarchical_identifier
                                                  (simple_identifier))))))))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))
            (simple_identifier)))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier))
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)
                (expression
                  (primary))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (tf_call
                          (hierarchical_identifier
                            (simple_identifier))
                          (list_of_arguments
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier))
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (tf_call
                                  (hierarchical_identifier
                                    (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (seq_block
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (subroutine_call_statement
                                      (subroutine_call
                                        (tf_call
                                          (hierarchical_identifier
                                            (simple_identifier))
                                          (list_of_arguments
                                            (expression
                                              (primary
                                                (primary_literal
                                                  (string_literal
                                                    (quoted_string)))))
                                            (expression
                                              (primary
                                                (function_subroutine_call
                                                  (subroutine_call
                                                    (system_tf_call
                                                      (system_tf_identifier)
                                                      (list_of_arguments
                                                        (expression
                                                          (primary
                                                            (primary_literal
                                                              (string_literal
                                                                (quoted_string)))))
                                                        (expression
                                                          (primary
                                                            (function_subroutine_call
                                                              (subroutine_call
                                                                (tf_call
                                                                  (hierarchical_identifier
                                                                    (simple_identifier))))))))))))))))))))
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (jump_statement)))))))))))))
            (comment)
            (comment)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (jump_statement)))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (seq_block
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (subroutine_call_statement
                                      (subroutine_call
                                        (tf_call
                                          (hierarchical_identifier
                                            (simple_identifier))
                                          (list_of_arguments
                                            (expression
                                              (primary
                                                (hierarchical_identifier
                                                  (simple_identifier))))))))))))))))))))
            (comment)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))
            (simple_identifier)))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (simple_identifier)))
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (tf_port_direction)
                (data_type_or_implicit
                  (data_type
                    (class_type
                      (simple_identifier)
                      (simple_identifier))))
                name: (simple_identifier)))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (class_type
                      (simple_identifier)
                      (simple_identifier))))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)
                    (expression
                      (primary
                        (function_subroutine_call
                          (subroutine_call
                            (method_call
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))
                              (method_call_body
                                name: (simple_identifier)))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          left: (expression
                            (primary
                              (function_subroutine_call
                                (subroutine_call
                                  (method_call
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))
                                    (method_call_body
                                      (array_or_queue_method_call
                                        (array_or_queue_method_name))))))))
                          right: (expression
                            (primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    (unsigned_number))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (jump_statement
                              (expression
                                (primary)))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (hierarchical_identifier
                        (simple_identifier))
                      (class_new))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (loop_statement
                      (for_initialization
                        (for_variable_declaration
                          (data_type
                            (integer_atom_type))
                          (simple_identifier)
                          (expression
                            (primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    (unsigned_number))))))))
                      (expression
                        left: (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        right: (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    (array_or_queue_method_call
                                      (array_or_queue_method_name)))))))))
                      (for_step
                        (inc_or_dec_expression
                          (inc_or_dec_operator)
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (seq_block
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (conditional_statement
                                      (cond_predicate
                                        (expression
                                          (primary
                                            (function_subroutine_call
                                              (subroutine_call
                                                (system_tf_call
                                                  (system_tf_identifier)
                                                  (list_of_arguments
                                                    (expression
                                                      (primary
                                                        (hierarchical_identifier
                                                          (simple_identifier))))
                                                    (expression
                                                      (primary
                                                        (function_subroutine_call
                                                          (subroutine_call
                                                            (method_call
                                                              (primary
                                                                (hierarchical_identifier
                                                                  (simple_identifier)))
                                                              (method_call_body
                                                                name: (simple_identifier)
                                                                arguments: (list_of_arguments
                                                                  (expression
                                                                    (primary
                                                                      (hierarchical_identifier
                                                                        (simple_identifier))))))))))))))))))
                                      (statement_or_null
                                        (statement
                                          (statement_item
                                            (seq_block
                                              (statement_or_null
                                                (statement
                                                  (statement_item
                                                    (subroutine_call_statement
                                                      (subroutine_call
                                                        (method_call
                                                          (primary
                                                            (hierarchical_identifier
                                                              (simple_identifier)))
                                                          (method_call_body
                                                            (queue_method_call
                                                              (queue_method_name)
                                                              (list_of_arguments
                                                                (expression
                                                                  (primary
                                                                    (hierarchical_identifier
                                                                      (simple_identifier))))))))))))))))))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier)
                                    arguments: (list_of_arguments
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)))))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          operator: (unary_operator)
                          argument: (primary
                            (function_subroutine_call
                              (subroutine_call
                                (system_tf_call
                                  (system_tf_identifier)
                                  (list_of_arguments
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier)))))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (jump_statement
                              (expression
                                (primary)))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))
    (comment)
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (class_type
                      (simple_identifier)
                      (simple_identifier))))
                name: (simple_identifier)))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)
                    (expression
                      (primary
                        (function_subroutine_call
                          (subroutine_call
                            (method_call
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))
                              (method_call_body
                                name: (simple_identifier)))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (method_call
                          (primary
                            (hierarchical_identifier
                              (simple_identifier)))
                          (method_call_body
                            name: (simple_identifier)
                            arguments: (list_of_arguments
                              (expression
                                (primary))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))))
