============================================
uvm/1800.2-2020-2.0/src/base/uvm_resource_db_options
============================================

//----------------------------------------------------------------------
// Copyright 2018 Cadence Design Systems, Inc.
// Copyright 2017 Cisco Systems, Inc.
// Copyright 2018-2020 NVIDIA Corporation
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Title -- NODOCS -- UVM Resource Database
//
// Topic: Intro
//
// The <uvm_resource_db> class provides a convenience interface for
// the resources facility.  In many cases basic operations such as
// creating and setting a resource or getting a resource could take
// multiple lines of code using the interfaces in <uvm_resource_base> or
// <uvm_resource#(T)>.  The convenience layer in <uvm_resource_db>
// reduces many of those operations to a single line of code.
//
// If the run-time ~+UVM_RESOURCE_DB_TRACE~ command line option is
// specified, all resource DB accesses (read and write) are displayed.
//----------------------------------------------------------------------



//----------------------------------------------------------------------
// Class: uvm_resource_db_options
//
// This class contains static functions for manipulating and
// retrieving options that control the behavior of the 
// resources DB facility.
//
// @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2
//----------------------------------------------------------------------
class uvm_resource_db_options;
   
  static local bit ready;
  static local bit tracing;

  // Function: turn_on_tracing
  //
  // Turn tracing on for the resource database. This causes all
  // reads and writes to the database to display information about
  // the accesses. Tracing is off by default.
  //
  // This method is implicitly called by the ~+UVM_RESOURCE_DB_TRACE~.
  //
  // @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2


  static function void turn_on_tracing();
     if (!ready) init();
    tracing = 1;
  endfunction

  // Function: turn_off_tracing
  //
  // Turn tracing off for the resource database.
  //
  // @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2


  static function void turn_off_tracing();
     if (!ready) init();
    tracing = 0;
  endfunction

  // Function: is_tracing
  //
  // Returns 1 if the tracing facility is on and 0 if it is off.
  //
  // @uvm-accellera The details of this API are specific to the Accellera implementation, and are not being considered for contribution to 1800.2


  static function bit is_tracing();
    if (!ready) init();
    return tracing;
  endfunction


  static local function void init();
     uvm_cmdline_processor clp;
     string trace_args[$];
     
     clp = uvm_cmdline_processor::get_inst();

     if (clp.get_arg_matches("+UVM_RESOURCE_DB_TRACE", trace_args)) begin
        tracing = 1;
     end

     ready = 1;
  endfunction

endclass

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_item
      (class_property
        (class_item_qualifier)
        (class_item_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (class_item
      (class_property
        (class_item_qualifier)
        (class_item_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          operator: (unary_operator)
                          argument: (primary
                            (hierarchical_identifier
                              (simple_identifier)))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (tf_call
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          operator: (unary_operator)
                          argument: (primary
                            (hierarchical_identifier
                              (simple_identifier)))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (tf_call
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))
    (comment)
    (comment)
    (comment)
    (comment)
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (integer_vector_type)))
            name: (simple_identifier)
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          operator: (unary_operator)
                          argument: (primary
                            (hierarchical_identifier
                              (simple_identifier)))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (tf_call
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (method_qualifier
          (class_item_qualifier))
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)
                    (queue_dimension)))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier)))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (method_call
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))
                                  (method_call_body
                                    name: (simple_identifier)
                                    arguments: (list_of_arguments
                                      (expression
                                        (primary
                                          (primary_literal
                                            (string_literal
                                              (quoted_string)))))
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier))))))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (seq_block
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (blocking_assignment
                                      (operator_assignment
                                        (variable_lvalue
                                          (hierarchical_identifier
                                            (simple_identifier)))
                                        (assignment_operator)
                                        (expression
                                          (primary
                                            (primary_literal
                                              (integral_number
                                                (decimal_number
                                                  (unsigned_number))))))))))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))))
