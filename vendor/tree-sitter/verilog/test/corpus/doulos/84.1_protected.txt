============================================
doulos/84.1_protected
============================================

// Section 84.1: Protected

class BaseClass;
  extern virtual protected function int AFunc(bit X); // Prototype
  extern protected virtual function int BFunc(int Y);
endclass

class ExtendedClass extends BaseClass;
  protected function int AFunc(bit X);
    /*...*/ // Function body
  endfunction
endclass



----

(source_file
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_item
      (class_method
        (method_qualifier)
        (method_qualifier
          (class_item_qualifier))
        (function_prototype
          (data_type_or_void
            (data_type
              (integer_atom_type)))
          name: (simple_identifier)
          (tf_port_list
            (tf_port_item
              (data_type_or_implicit
                (data_type
                  (integer_vector_type)))
              name: (simple_identifier))))))
    (comment)
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (method_qualifier)
        (function_prototype
          (data_type_or_void
            (data_type
              (integer_atom_type)))
          name: (simple_identifier)
          (tf_port_list
            (tf_port_item
              (data_type_or_implicit
                (data_type
                  (integer_atom_type)))
              name: (simple_identifier)))))))
  (class_declaration
    name: (simple_identifier)
    (class_type
      (simple_identifier))
    (class_item
      (class_method
        (method_qualifier
          (class_item_qualifier))
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (integer_atom_type)))
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (integer_vector_type)))
                name: (simple_identifier)))
            (comment)
            (comment)))))))
