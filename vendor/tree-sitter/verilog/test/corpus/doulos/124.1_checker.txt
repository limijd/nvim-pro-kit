============================================
doulos/124.1_checker
============================================

// Section 124.1: Checker

module m;
  default disable iff rst;
  /*...*/
  // inherits disable iff rst from enclosing module
  checker Check1 (logic sig, event clk = $inferred_clock);
    default clocking @clk;
    endclocking;

    property p1(logic psig);
        a |-> b;
        /*...*/
    endproperty : p1

    assert1: assert property (p1(.psig(test_sig)));
  endchecker: Check1
endmodule : m



----

(source_file
  (comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))
    (expression_or_dist
      (expression
        (primary
          (hierarchical_identifier
            (simple_identifier)))))
    (comment)
    (comment)
    (checker_declaration
      name: (simple_identifier)
      (checker_port_list
        (checker_port_item
          (property_formal_type
            (sequence_formal_type
              (data_type_or_implicit
                (data_type
                  (integer_vector_type)))))
          (simple_identifier))
        (checker_port_item
          (property_formal_type
            (sequence_formal_type
              (data_type_or_implicit
                (data_type))))
          (simple_identifier)
          (event_expression
            (expression
              (primary
                (function_subroutine_call
                  (subroutine_call
                    (system_tf_call
                      (system_tf_identifier)))))))))
      (checker_item
        (clocking_declaration
          (clocking_event
            (simple_identifier))))
      (checker_item)
      (checker_item
        (property_declaration
          name: (simple_identifier)
          (property_port_list
            (property_port_item
              (property_formal_type
                (sequence_formal_type
                  (data_type_or_implicit
                    (data_type
                      (integer_vector_type)))))
              (simple_identifier)))
          (property_spec
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))))
              (property_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))))
          (comment)
          (simple_identifier)))
      (checker_item
        (concurrent_assertion_item
          (simple_identifier)
          (assert_property_statement
            (property_spec
              (property_expr
                (sequence_expr
                  (sequence_instance
                    (hierarchical_identifier
                      (simple_identifier))
                    (sequence_list_of_arguments
                      (simple_identifier)
                      (event_expression
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))
            (action_block
              (statement_or_null)))))
      (simple_identifier))
    (simple_identifier)))
