============================================
doulos/110.3_user_defined_primitive
============================================

// Section 110.3: User Defined Primitive

primitive DFF (Q, Clk, D);
  output Q;
  input Clk, D;

  reg Q;                             // Edge sensitive UDP

  initial
    Q = 1;

  table
//  Clk  D  : old Q : Q
     r   0  :   ?   : 0;      // Clock '0'
     r   1  :   ?   : 1;      // Clock '1'
    (0?) 0  :   0   : -;      // Possible Clock
    (0?) 1  :   1   : -;      //    "           "
    (?1) 0  :   0   : -;      //    "           "
    (?1) 1  :   1   : -;      //    "           "
    (?0) ?  :   ?   : -;      // Ignore falling clock
    (1?) ?  :   ?   : -;      //   "   "    "
     ?   *  :   ?   : -;      // Ignore D changes on steady clock
  endtable

endprimitive



----

(source_file
  (comment)
  (udp_declaration
    (udp_nonansi_declaration
      (simple_identifier)
      (udp_port_list
        (simple_identifier)
        (simple_identifier)
        (simple_identifier)))
    (udp_port_declaration
      (udp_output_declaration
        (simple_identifier)))
    (udp_port_declaration
      (udp_input_declaration
        (list_of_udp_port_identifiers
          (simple_identifier)
          (simple_identifier))))
    (udp_port_declaration
      (udp_reg_declaration
        (simple_identifier)))
    (comment)
    (sequential_body
      (udp_initial_statement
        (simple_identifier)
        (init_val))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (edge_symbol))
          (level_symbol))
        (level_symbol)
        (next_state
          (output_symbol)))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (edge_symbol))
          (level_symbol))
        (level_symbol)
        (next_state
          (output_symbol)))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (level_symbol)
            (level_symbol))
          (level_symbol))
        (level_symbol)
        (next_state))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (level_symbol)
            (level_symbol))
          (level_symbol))
        (level_symbol)
        (next_state))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (level_symbol)
            (level_symbol))
          (level_symbol))
        (level_symbol)
        (next_state))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (level_symbol)
            (level_symbol))
          (level_symbol))
        (level_symbol)
        (next_state))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (level_symbol)
            (level_symbol))
          (level_symbol))
        (level_symbol)
        (next_state))
      (comment)
      (sequential_entry
        (edge_input_list
          (edge_indicator
            (level_symbol)
            (level_symbol))
          (level_symbol))
        (level_symbol)
        (next_state))
      (comment)
      (sequential_entry
        (edge_input_list
          (level_symbol)
          (edge_indicator
            (edge_symbol)))
        (level_symbol)
        (next_state))
      (comment))))
