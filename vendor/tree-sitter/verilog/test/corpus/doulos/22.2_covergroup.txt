============================================
doulos/22.2_covergroup
============================================

// Section 22.2: Covergroup

// Setting options and type options procedurally after instantiating a covergroup 
covergroup CG @(posedge clk);
  CP1 : coverpoint A;
  CP2 : coverpoint B;
endgroup
CG C1 = new;
C1.option.comment = "A comment set for the instance C1";
C1.CP1.option.auto_bin_max = 8;  // Create 8 automatic bins for 
                                 // coverpoint CP1 of instance C1
CG::type_option.comment = "A comment set for C1";
CG::CP1::type_option.weight = 10;



----

(source_file
  (comment)
  (comment)
  (covergroup_declaration
    name: (simple_identifier)
    (coverage_event
      (clocking_event
        (event_expression
          (edge_identifier)
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier)))))))
    (coverage_spec_or_option
      (cover_point
        name: (simple_identifier)
        (expression
          (primary
            (hierarchical_identifier
              (simple_identifier))))
        (bins_or_empty)))
    (coverage_spec_or_option
      (cover_point
        name: (simple_identifier)
        (expression
          (primary
            (hierarchical_identifier
              (simple_identifier))))
        (bins_or_empty))))
  (data_declaration
    (data_type_or_implicit
      (data_type
        (simple_identifier)))
    (list_of_variable_decl_assignments
      (variable_decl_assignment
        name: (simple_identifier)
        (class_new))))
  (statement
    (statement_item
      (blocking_assignment
        (operator_assignment
          (variable_lvalue
            (hierarchical_identifier
              (simple_identifier)
              (simple_identifier)
              (simple_identifier)))
          (assignment_operator)
          (expression
            (primary
              (primary_literal
                (string_literal
                  (quoted_string)))))))))
  (statement
    (statement_item
      (blocking_assignment
        (operator_assignment
          (variable_lvalue
            (hierarchical_identifier
              (simple_identifier)
              (simple_identifier)
              (simple_identifier)
              (simple_identifier)))
          (assignment_operator)
          (expression
            (primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number))))))))))
  (comment)
  (comment)
  (statement
    (statement_item
      (blocking_assignment
        (operator_assignment
          (variable_lvalue
            (package_scope
              (simple_identifier))
            (hierarchical_identifier
              (simple_identifier)
              (simple_identifier)))
          (assignment_operator)
          (expression
            (primary
              (primary_literal
                (string_literal
                  (quoted_string)))))))))
  (statement
    (statement_item
      (blocking_assignment
        (operator_assignment
          (variable_lvalue
            (class_qualifier
              (class_scope
                (class_type
                  (simple_identifier)
                  (simple_identifier))))
            (hierarchical_identifier
              (simple_identifier)
              (simple_identifier)))
          (assignment_operator)
          (expression
            (primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number)))))))))))
