============================================
doulos/130.1_implication
============================================

// Section 130.1: Implication

property p;
    s1 |-> s2;
endproperty
// In the example above, if the sequence s1 matches, then sequence s2 must also match.
// If sequence s1 does not match, then the result is true.

property p;
    s1 |=> s2;
endproperty
// The expression above is equivalent to:

`define true 1
property p;
    s1 ##1 `true |-> s2;
endproperty
// where `true is a boolean expression, used for visual clarity, that always evaluates to true.



----

(source_file
  (comment)
  (property_declaration
    name: (simple_identifier)
    (property_spec
      (property_expr
        (sequence_expr
          (expression_or_dist
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))
        (property_expr
          (sequence_expr
            (expression_or_dist
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))))))
  (comment)
  (comment)
  (property_declaration
    name: (simple_identifier)
    (property_spec
      (property_expr
        (sequence_expr
          (expression_or_dist
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))
        (property_expr
          (sequence_expr
            (expression_or_dist
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))))))
  (comment)
  (text_macro_definition
    (text_macro_name
      (simple_identifier))
    (macro_text))
  (property_declaration
    name: (simple_identifier)
    (property_spec
      (property_expr
        (sequence_expr
          (sequence_expr
            (expression_or_dist
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))
          (cycle_delay_range
            (constant_primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number))))))
          (sequence_expr
            (expression_or_dist
              (expression
                (text_macro_usage
                  (simple_identifier))))))
        (property_expr
          (sequence_expr
            (expression_or_dist
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))))))))
  (comment))
