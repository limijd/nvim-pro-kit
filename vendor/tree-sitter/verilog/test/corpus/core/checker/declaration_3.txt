============================================
core/checker/declaration_3
============================================

// Checker with default input and initialized output arguments
checker my_check4 (input logic in,
    en = 1'b1, // default value
    event clock,
    output int ctr = 0); // initial value
    default clocking @clock; endclocking
    always_ff @clock
        if (en && in) ctr <= ctr + 1;
    a1: assert property (ctr < 5);
endchecker : my_check4

----

(source_file
  (comment)
  (checker_declaration
    name: (simple_identifier)
    (checker_port_list
      (checker_port_item
        (checker_port_direction)
        (property_formal_type
          (sequence_formal_type
            (data_type_or_implicit
              (data_type
                (integer_vector_type)))))
        (simple_identifier))
      (checker_port_item
        (simple_identifier)
        (event_expression
          (expression
            (primary
              (primary_literal
                (integral_number
                  (binary_number
                    size: (unsigned_number)
                    base: (binary_base)
                    value: (binary_value))))))))
      (comment)
      (checker_port_item
        (property_formal_type
          (sequence_formal_type
            (data_type_or_implicit
              (data_type))))
        (simple_identifier))
      (checker_port_item
        (checker_port_direction)
        (property_formal_type
          (sequence_formal_type
            (data_type_or_implicit
              (data_type
                (integer_atom_type)))))
        (simple_identifier)
        (event_expression
          (expression
            (primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number)))))))))
    (comment)
    (checker_item
      (clocking_declaration
        (clocking_event
          (simple_identifier))))
    (checker_item
      (always_construct
        (always_keyword)
        (statement
          (statement_item
            (procedural_timing_control_statement
              (event_control
                (clocking_event
                  (simple_identifier)))
              (statement_or_null
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          left: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          right: (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (nonblocking_assignment
                              (variable_lvalue
                                (hierarchical_identifier
                                  (simple_identifier)))
                              (expression
                                left: (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                right: (expression
                                  (primary
                                    (primary_literal
                                      (integral_number
                                        (decimal_number
                                          (unsigned_number))))))))))))))))))))
    (checker_item
      (concurrent_assertion_item
        (simple_identifier)
        (assert_property_statement
          (property_spec
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      (primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number)))))))))))
          (action_block
            (statement_or_null)))))
    (simple_identifier)))
