============================================
sv-tests/chapter-22/22.6--ifdef-nested
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: 22.6--ifdef-nested
:description: Test
:tags: 22.6
:type: preprocessing
*/
module test(out);
output out;
`define wow
`define nest_one
`define second_nest
`define nest_two
`ifdef wow
	initial $display("wow is defined");
	`ifdef nest_one
		initial $display("nest_one is defined");
		`ifdef nest_two
			initial $display("nest_two is defined");
		`else
			initial $display("nest_two is not defined");
		`endif
	`else
		initial $display("nest_one is not defined");
	`endif
`else
	initial $display("wow is not defined");
	`ifdef second_nest
		initial $display("second_nest is defined");
	`else
		initial $display("second_nest is not defined");
	`endif
`endif
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports
        (port
          (simple_identifier))))
    (module_item
      (port_declaration
        (output_declaration
          (list_of_port_identifiers
            (simple_identifier)))))
    (module_item
      (text_macro_definition
        (text_macro_name
          (simple_identifier))))
    (module_item
      (text_macro_definition
        (text_macro_name
          (simple_identifier))))
    (module_item
      (text_macro_definition
        (text_macro_name
          (simple_identifier))))
    (module_item
      (text_macro_definition
        (text_macro_name
          (simple_identifier))))
    (module_item
      (conditional_compilation_directive
        (ifdef_condition
          (simple_identifier))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive
        (ifdef_condition
          (simple_identifier))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive
        (ifdef_condition
          (simple_identifier))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive))
    (module_item
      (conditional_compilation_directive))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive))
    (module_item
      (conditional_compilation_directive))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive
        (ifdef_condition
          (simple_identifier))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string))))))))))))))
    (module_item
      (conditional_compilation_directive))
    (module_item
      (conditional_compilation_directive))))
