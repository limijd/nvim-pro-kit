============================================
sv-tests/chapter-22/22.5.1--define_and_resetall
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: 22.5.1--define_and_resetall
:description: The text macro facility is not affected by the compiler directive `resetall
:tags: 22.5.1
:type: simulation elaboration preprocessing
*/
`define SOMESTRING "somestring"
`resetall

module top ();
initial begin
       	$display(":assert:('%s' == '%s')", `SOMESTRING, "somestring");
end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (text_macro_definition
    (text_macro_name
      (simple_identifier))
    (macro_text))
  (resetall_compiler_directive)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (system_tf_call
                            (system_tf_identifier)
                            (list_of_arguments
                              (expression
                                (primary
                                  (primary_literal
                                    (string_literal
                                      (quoted_string)))))
                              (expression
                                (text_macro_usage
                                  (simple_identifier)))
                              (expression
                                (primary
                                  (primary_literal
                                    (string_literal
                                      (quoted_string))))))))))))))))))))
