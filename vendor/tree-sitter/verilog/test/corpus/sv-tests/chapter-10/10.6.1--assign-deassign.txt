============================================
sv-tests/chapter-10/10.6.1--assign-deassign
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: assign_deassign
:description: assign-deassign statements test
:tags: 10.6.1
*/
module top(clk, q, d, clr, set);

input clk, d, clr, set;
output q;
logic q;

always @(clr or set)
	if (clr)
		assign q = 0;
	else if (set)
		assign q = 1;
	else
		deassign q;

always @(posedge clk)
	q <= d;

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports
        (port
          (simple_identifier))
        (port
          (simple_identifier))
        (port
          (simple_identifier))
        (port
          (simple_identifier))
        (port
          (simple_identifier))))
    (module_item
      (port_declaration
        (input_declaration
          (list_of_port_identifiers
            (simple_identifier)
            (simple_identifier)
            (simple_identifier)
            (simple_identifier)))))
    (module_item
      (port_declaration
        (output_declaration
          (list_of_port_identifiers
            (simple_identifier)))))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (integer_vector_type)))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)))))
    (module_item
      (always_construct
        (always_keyword)
        (statement
          (statement_item
            (procedural_timing_control_statement
              (event_control
                (clocking_event
                  (event_expression
                    (event_expression
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))
                    (event_expression
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))))))
              (statement_or_null
                (statement
                  (statement_item
                    (conditional_statement
                      (cond_predicate
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier)))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (procedural_continuous_assignment
                              (variable_assignment
                                (variable_lvalue
                                  (hierarchical_identifier
                                    (simple_identifier)))
                                (expression
                                  (primary
                                    (primary_literal
                                      (integral_number
                                        (decimal_number
                                          (unsigned_number)))))))))))
                      (statement_or_null
                        (statement
                          (statement_item
                            (conditional_statement
                              (cond_predicate
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))))
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (procedural_continuous_assignment
                                      (variable_assignment
                                        (variable_lvalue
                                          (hierarchical_identifier
                                            (simple_identifier)))
                                        (expression
                                          (primary
                                            (primary_literal
                                              (integral_number
                                                (decimal_number
                                                  (unsigned_number)))))))))))
                              (statement_or_null
                                (statement
                                  (statement_item
                                    (procedural_continuous_assignment
                                      (variable_lvalue
                                        (hierarchical_identifier
                                          (simple_identifier))))))))))))))))))))
    (module_item
      (always_construct
        (always_keyword)
        (statement
          (statement_item
            (procedural_timing_control_statement
              (event_control
                (clocking_event
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (statement_or_null
                (statement
                  (statement_item
                    (nonblocking_assignment
                      (variable_lvalue
                        (hierarchical_identifier
                          (simple_identifier)))
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))))
