============================================
sv-tests/chapter-24/24.3--program
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: program_construct
:description: program construct test
:tags: 24.3
:type: simulation elaboration parsing
:unsynthesizable: 1
*/
program prog(input wire a, input wire b);
	initial $display(":assert: (%d == %d)", a, b);
endprogram

module top();

   wire a = 1;
   wire b = 1;

   prog p(a, b);

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (program_declaration
    (program_ansi_header
      name: (simple_identifier)
      (list_of_port_declarations
        (ansi_port_declaration
          (net_port_header
            (port_direction)
            (net_port_type
              (net_type)))
          port_name: (simple_identifier))
        (ansi_port_declaration
          (net_port_header
            (port_direction)
            (net_port_type
              (net_type)))
          port_name: (simple_identifier))))
    (initial_construct
      (statement_or_null
        (statement
          (statement_item
            (subroutine_call_statement
              (subroutine_call
                (system_tf_call
                  (system_tf_identifier)
                  (list_of_arguments
                    (expression
                      (primary
                        (primary_literal
                          (string_literal
                            (quoted_string)))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))))))))
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (net_declaration
        (net_type)
        (list_of_net_decl_assignments
          (net_decl_assignment
            (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (net_declaration
        (net_type)
        (list_of_net_decl_assignments
          (net_decl_assignment
            (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (module_instantiation
        instance_type: (simple_identifier)
        (hierarchical_instance
          (name_of_instance
            instance_name: (simple_identifier))
          (list_of_port_connections
            (ordered_port_connection
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))
            (ordered_port_connection
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))))))))
