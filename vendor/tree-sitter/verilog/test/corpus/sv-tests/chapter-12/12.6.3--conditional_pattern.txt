============================================
sv-tests/chapter-12/12.6.3--conditional_pattern
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: conditional_pattern
:description: A module testing pattern matching in conditional expressions
:tags: 12.6.3
*/
module case_tb ();

	typedef union tagged {
		struct {
			bit [3:0] val1, val2;
		} a;
		struct {
			bit [7:0] val1, val2;
		} b;
		struct {
			bit [15:0] val1, val2;
		} c;
	} u;

	u tmp;

	bit [3:0] val;

	initial begin
          val = tmp matches tagged a '{4'b01zx, .v} ? 1 : 2;
	end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (data_declaration
        (type_declaration
          (data_type
            (struct_union)
            (struct_union_member
              (data_type_or_void
                (data_type
                  (struct_union)
                  (struct_union_member
                    (data_type_or_void
                      (data_type
                        (integer_vector_type)
                        (packed_dimension
                          (constant_range
                            (constant_expression
                              (constant_primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))
                            (constant_expression
                              (constant_primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))))))
                    (list_of_variable_decl_assignments
                      (variable_decl_assignment
                        name: (simple_identifier))
                      (variable_decl_assignment
                        name: (simple_identifier))))))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  name: (simple_identifier))))
            (struct_union_member
              (data_type_or_void
                (data_type
                  (struct_union)
                  (struct_union_member
                    (data_type_or_void
                      (data_type
                        (integer_vector_type)
                        (packed_dimension
                          (constant_range
                            (constant_expression
                              (constant_primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))
                            (constant_expression
                              (constant_primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))))))
                    (list_of_variable_decl_assignments
                      (variable_decl_assignment
                        name: (simple_identifier))
                      (variable_decl_assignment
                        name: (simple_identifier))))))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  name: (simple_identifier))))
            (struct_union_member
              (data_type_or_void
                (data_type
                  (struct_union)
                  (struct_union_member
                    (data_type_or_void
                      (data_type
                        (integer_vector_type)
                        (packed_dimension
                          (constant_range
                            (constant_expression
                              (constant_primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))
                            (constant_expression
                              (constant_primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))))))
                    (list_of_variable_decl_assignments
                      (variable_decl_assignment
                        name: (simple_identifier))
                      (variable_decl_assignment
                        name: (simple_identifier))))))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  name: (simple_identifier)))))
          type_name: (simple_identifier))))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (simple_identifier)))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)))))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (integer_vector_type)
            (packed_dimension
              (constant_range
                (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))
                (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))))))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (blocking_assignment
                        (operator_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (assignment_operator)
                          (expression
                            (conditional_expression
                              (cond_predicate
                                (cond_pattern
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))))
                                  (pattern
                                    (simple_identifier)
                                    (pattern
                                      (pattern
                                        (constant_expression
                                          (constant_primary
                                            (primary_literal
                                              (integral_number
                                                (binary_number
                                                  size: (unsigned_number)
                                                  base: (binary_base)
                                                  value: (binary_value)))))))
                                      (pattern
                                        (simple_identifier))))))
                              (expression
                                (primary
                                  (primary_literal
                                    (integral_number
                                      (decimal_number
                                        (unsigned_number))))))
                              (expression
                                (primary
                                  (primary_literal
                                    (integral_number
                                      (decimal_number
                                        (unsigned_number)))))))))))))))))))))
