============================================
sv-tests/chapter-12/12.7.3--foreach
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: foreach_loop
:description: A module testing foreach loop
:tags: 12.7.3
:unsynthesizable: 1
*/
module foreach_tb ();
	string test [4] = '{"111", "222", "333", "444"};
	initial begin
		foreach(test[i])
			$display(i, test[i]);
	end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)
            (unpacked_dimension
              (constant_expression
                (constant_primary
                  (primary_literal
                    (integral_number
                      (decimal_number
                        (unsigned_number)))))))
            (expression
              (primary
                (assignment_pattern_expression
                  (assignment_pattern
                    (expression
                      (primary
                        (primary_literal
                          (string_literal
                            (quoted_string)))))
                    (expression
                      (primary
                        (primary_literal
                          (string_literal
                            (quoted_string)))))
                    (expression
                      (primary
                        (primary_literal
                          (string_literal
                            (quoted_string)))))
                    (expression
                      (primary
                        (primary_literal
                          (string_literal
                            (quoted_string)))))))))))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (loop_statement
                        (hierarchical_identifier
                          (simple_identifier))
                        (loop_variables
                          (simple_identifier))
                        (statement
                          (statement_item
                            (subroutine_call_statement
                              (subroutine_call
                                (system_tf_call
                                  (system_tf_identifier)
                                  (list_of_arguments
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier))
                                        (select
                                          (bit_select
                                            (expression
                                              (primary
                                                (hierarchical_identifier
                                                  (simple_identifier))))))))))))))))))))))))))
