============================================
sv-tests/chapter-7/unions/unpacked/basic
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: basic-union
:description: Test basic union support
:tags: 7.3
:type: simulation elaboration parsing
*/
module top ();

union {
	bit [7:0] v1;
	bit [3:0] v2;
} un;

initial begin
	un.v1 = 8'd140;
	$display(":assert: (%d == 140)", un.v1);
	$display(":assert: (%d == 12)", un.v2);
end

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (struct_union)
            (struct_union_member
              (data_type_or_void
                (data_type
                  (integer_vector_type)
                  (packed_dimension
                    (constant_range
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  name: (simple_identifier))))
            (struct_union_member
              (data_type_or_void
                (data_type
                  (integer_vector_type)
                  (packed_dimension
                    (constant_range
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  name: (simple_identifier))))))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (blocking_assignment
                        (operator_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)
                              (simple_identifier)))
                          (assignment_operator)
                          (expression
                            (primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    size: (unsigned_number)
                                    base: (decimal_base)
                                    value: (unsigned_number)))))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (system_tf_call
                            (system_tf_identifier)
                            (list_of_arguments
                              (expression
                                (primary
                                  (primary_literal
                                    (string_literal
                                      (quoted_string)))))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)
                                    (simple_identifier)))))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (system_tf_call
                            (system_tf_identifier)
                            (list_of_arguments
                              (expression
                                (primary
                                  (primary_literal
                                    (string_literal
                                      (quoted_string)))))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)
                                    (simple_identifier)))))))))))))))))))
