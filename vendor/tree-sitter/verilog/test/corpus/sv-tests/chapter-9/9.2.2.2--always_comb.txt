============================================
sv-tests/chapter-9/9.2.2.2--always_comb
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: always_comb
:description: always_comb check
:tags: 9.2.2.2
*/
module always_tb ();
	wire a = 0;
	reg b = 0;
	always_comb
		b = ~a;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (net_declaration
        (net_type)
        (list_of_net_decl_assignments
          (net_decl_assignment
            (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (integer_vector_type)))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (always_construct
        (always_keyword)
        (statement
          (statement_item
            (blocking_assignment
              (operator_assignment
                (variable_lvalue
                  (hierarchical_identifier
                    (simple_identifier)))
                (assignment_operator)
                (expression
                  operator: (unary_operator)
                  argument: (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))))
