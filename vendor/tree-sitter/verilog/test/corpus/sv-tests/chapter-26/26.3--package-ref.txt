============================================
sv-tests/chapter-26/26.3--package-ref
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: package_ref
:description: package reference test
:tags: 26.3
:type: simulation elaboration parsing
*/

package mypkg;

function int add(int a, b);
	return a + b;
endfunction

endpackage : mypkg

module top();

initial $display(":assert: (%d == 4)", mypkg::add(1, 3));

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (package_declaration
    name: (simple_identifier)
    (package_item
      (function_declaration
        (function_body_declaration
          (data_type_or_void
            (data_type
              (integer_atom_type)))
          name: (simple_identifier)
          (tf_port_list
            (tf_port_item
              (data_type_or_implicit
                (data_type
                  (integer_atom_type)))
              name: (simple_identifier))
            (tf_port_item
              name: (simple_identifier)))
          (function_statement_or_null
            (function_statement
              (statement
                (statement_item
                  (jump_statement
                    (expression
                      left: (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))
                      right: (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))
    (simple_identifier))
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (subroutine_call_statement
                (subroutine_call
                  (system_tf_call
                    (system_tf_identifier)
                    (list_of_arguments
                      (expression
                        (primary
                          (primary_literal
                            (string_literal
                              (quoted_string)))))
                      (expression
                        (primary
                          (function_subroutine_call
                            (subroutine_call
                              (method_call
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))
                                (method_call_body
                                  name: (simple_identifier)
                                  arguments: (list_of_arguments
                                    (expression
                                      (primary
                                        (primary_literal
                                          (integral_number
                                            (decimal_number
                                              (unsigned_number))))))
                                    (expression
                                      (primary
                                        (primary_literal
                                          (integral_number
                                            (decimal_number
                                              (unsigned_number))))))))))))))))))))))))
