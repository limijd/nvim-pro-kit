============================================
sv-tests/testbenches/uvm_test_run_test
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: uvm_test_run_test
:description: test if uvm_test instance can be called by name
:tags: uvm uvm-classes
:type: simulation elaboration parsing
:unsynthesizable: 1
*/

import uvm_pkg::*;
`include "uvm_macros.svh"

class simple_test extends uvm_test;
    `uvm_component_utils(simple_test)

    function new(string name, uvm_component parent = null);
      super.new(name, parent);
    endfunction

    virtual function void connect_phase(uvm_phase phase);
        super.connect_phase(phase);
    endfunction

    virtual function void build_phase(uvm_phase phase);
        super.build_phase(phase);
    endfunction

    task run_phase(uvm_phase phase);
        phase.raise_objection(this);
        `uvm_info("RESULT", "SUCCESS, simple_test called", UVM_LOW);
        phase.drop_objection(this);
    endtask
endclass

module top;
    initial begin
        run_test("simple_test");
    end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (package_import_declaration
    (package_import_item
      (simple_identifier)))
  (include_compiler_directive
    (quoted_string))
  (class_declaration
    name: (simple_identifier)
    (class_type
      (simple_identifier))
    (class_item
      (text_macro_usage
        (simple_identifier)
        (list_of_actual_arguments
          (actual_argument
            (param_expression
              (mintypmax_expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))
    (class_item
      (class_method
        (class_constructor_declaration
          (class_constructor_arg_list
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type))
                name: (simple_identifier)))
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)
                (expression
                  (primary)))))
          (list_of_arguments
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))))
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (method_call
                          (implicit_class_handle)
                          (method_call_body
                            name: (simple_identifier)
                            arguments: (list_of_arguments
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))
    (class_item
      (class_method
        (method_qualifier)
        (function_declaration
          (function_body_declaration
            (data_type_or_void)
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (method_call
                          (implicit_class_handle)
                          (method_call_body
                            name: (simple_identifier)
                            arguments: (list_of_arguments
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))
    (class_item
      (class_method
        (task_declaration
          (task_body_declaration
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (simple_identifier)))
                name: (simple_identifier)))
            (statement_or_null
              (statement
                (statement_item
                  (subroutine_call_statement
                    (subroutine_call
                      (method_call
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))
                        (method_call_body
                          name: (simple_identifier)
                          arguments: (list_of_arguments
                            (expression
                              (primary))))))))))
            (statement_or_null
              (statement
                (statement_item
                  (text_macro_usage
                    (simple_identifier)
                    (list_of_actual_arguments
                      (actual_argument
                        (param_expression
                          (mintypmax_expression
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string))))))))
                      (actual_argument
                        (param_expression
                          (mintypmax_expression
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string))))))))
                      (actual_argument
                        (param_expression
                          (mintypmax_expression
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))
            (statement_or_null)
            (statement_or_null
              (statement
                (statement_item
                  (subroutine_call_statement
                    (subroutine_call
                      (method_call
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))
                        (method_call_body
                          name: (simple_identifier)
                          arguments: (list_of_arguments
                            (expression
                              (primary)))))))))))))))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))
    (initial_construct
      (statement_or_null
        (statement
          (statement_item
            (seq_block
              (statement_or_null
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (tf_call
                          (hierarchical_identifier
                            (simple_identifier))
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string)))))))))))))))))))
