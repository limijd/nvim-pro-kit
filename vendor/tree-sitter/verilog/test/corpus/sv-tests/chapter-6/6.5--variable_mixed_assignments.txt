============================================
sv-tests/chapter-6/6.5--variable_mixed_assignments
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: variable_mixed_assignments
:description: Variable mixed assignments tests
:should_fail_because: mixing procedural and continuous assignments is illegal
:tags: 6.5
:type: simulation elaboration
*/
module top();
	wire clk = 0;
	int v;

	assign v = 12;
	always @(posedge clk) v <= ~v;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (net_declaration
        (net_type)
        (list_of_net_decl_assignments
          (net_decl_assignment
            (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (integer_atom_type)))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)))))
    (module_item
      (continuous_assign
        (list_of_net_assignments
          (net_assignment
            (net_lvalue
              (simple_identifier))
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (always_construct
        (always_keyword)
        (statement
          (statement_item
            (procedural_timing_control_statement
              (event_control
                (clocking_event
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (statement_or_null
                (statement
                  (statement_item
                    (nonblocking_assignment
                      (variable_lvalue
                        (hierarchical_identifier
                          (simple_identifier)))
                      (expression
                        operator: (unary_operator)
                        argument: (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))))
