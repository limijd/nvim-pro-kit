============================================
sv-tests/chapter-6/6.10--implicit_continuous_assignment
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: implicit_continuous_assignment
:description: implicit declaration in continuous assignment tests
:tags: 6.10
*/
module top();
	wire [3:0] a = 8;
	wire [3:0] b = 5;

	assign c = | (a | b);
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (net_declaration
        (net_type)
        (data_type_or_implicit
          (implicit_data_type
            (packed_dimension
              (constant_range
                (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))
                (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))))))
        (list_of_net_decl_assignments
          (net_decl_assignment
            (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (net_declaration
        (net_type)
        (data_type_or_implicit
          (implicit_data_type
            (packed_dimension
              (constant_range
                (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))
                (constant_expression
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))))))
        (list_of_net_decl_assignments
          (net_decl_assignment
            (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number))))))))))
    (module_item
      (continuous_assign
        (list_of_net_assignments
          (net_assignment
            (net_lvalue
              (simple_identifier))
            (expression
              operator: (unary_operator)
              argument: (primary
                (mintypmax_expression
                  (expression
                    left: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    right: (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))))))
