============================================
sv-tests/chapter-6/6.19--enum_value_inv
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: enum_value_inv
:description: Tests that tools diagnose invalid enum value assignments
:should_fail_because: If the integer value expression is a sized literal constant, it shall be an error if the size is different from the enum base type, even if the value is within the representable range.
:tags: 6.19
:runner_verilator_flags: -Werror-WIDTH
:type: simulation elaboration
*/
module top();
	// 6.19 says:
	// If the integer value expression is a sized literal constant, it shall
	// be an error if the size is different from the enum base type, even if
	// the value is within the representable range.
	enum logic [2:0] {
	  Global = 4'h2,
	  Local = 4'h3
	} myenum;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (comment)
    (comment)
    (comment)
    (comment)
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (enum_base_type
              (integer_vector_type)
              (packed_dimension
                (constant_range
                  (constant_expression
                    (constant_primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number))))))
                  (constant_expression
                    (constant_primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number)))))))))
            (enum_name_declaration
              (simple_identifier)
              (constant_expression
                (constant_primary
                  (primary_literal
                    (integral_number
                      (hex_number
                        size: (unsigned_number)
                        base: (hex_base)
                        value: (hex_value)))))))
            (enum_name_declaration
              (simple_identifier)
              (constant_expression
                (constant_primary
                  (primary_literal
                    (integral_number
                      (hex_number
                        size: (unsigned_number)
                        base: (hex_base)
                        value: (hex_value)))))))))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)))))))
