============================================
sv-tests/chapter-6/6.16.8--string_substr
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: string_substr
:description: string.substr()  tests
:tags: 6.16.8
*/
module top();
	string a = "Test";
	string b = a.substr(1, 2);
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)
            (expression
              (primary
                (primary_literal
                  (string_literal
                    (quoted_string)))))))))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)
            (expression
              (primary
                (function_subroutine_call
                  (subroutine_call
                    (method_call
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))
                      (method_call_body
                        (string_method_call
                          (string_method_name)
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))))))))))))))))
