============================================
sv-tests/chapter-18/18.5.12--functions-in-constraint_0
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: functions_in_constraints_0
:description: functions in constraints test
:tags: 18.5.12
*/

class a;
    rand int b1, b2;
    function int F (input int d);
        F=d;
    endfunction

    constraint c1 { b1 == 5; }
    constraint c2 { b2 == F(b1); }
endclass

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_item
      (class_property
        (random_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))
            (variable_decl_assignment
              name: (simple_identifier))))))
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (integer_atom_type)))
            name: (simple_identifier)
            (tf_port_list
              (tf_port_item
                (tf_port_direction
                  (port_direction))
                (data_type_or_implicit
                  (data_type
                    (integer_atom_type)))
                name: (simple_identifier)))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))))))
    (class_item
      (constraint_declaration
        (simple_identifier)
        (constraint_block
          (constraint_block_item
            (constraint_expression
              (expression_or_dist
                (expression
                  left: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  right: (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number)))))))))))))
    (class_item
      (constraint_declaration
        (simple_identifier)
        (constraint_block
          (constraint_block_item
            (constraint_expression
              (expression_or_dist
                (expression
                  left: (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  right: (expression
                    (primary
                      (function_subroutine_call
                        (subroutine_call
                          (tf_call
                            (hierarchical_identifier
                              (simple_identifier))
                            (list_of_arguments
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))))
