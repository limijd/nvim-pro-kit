============================================
sv-tests/chapter-18/18.13.1--urandom_0
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: urandom_0
:description: urandom() test
:tags: 18.13.1
*/

class a;
    function int unsigned do_urandom();
        int unsigned x;
        x = $urandom();
        return x;
    endfunction
endclass

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_item
      (class_method
        (function_declaration
          (function_body_declaration
            (data_type_or_void
              (data_type
                (integer_atom_type)))
            name: (simple_identifier)
            (block_item_declaration
              (data_declaration
                (data_type_or_implicit
                  (data_type
                    (integer_atom_type)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    name: (simple_identifier)))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (system_tf_call
                                  (system_tf_identifier))))))))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (jump_statement
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))))
