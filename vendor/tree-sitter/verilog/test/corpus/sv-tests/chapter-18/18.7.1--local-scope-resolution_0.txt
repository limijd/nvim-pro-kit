============================================
sv-tests/chapter-18/18.7.1--local-scope-resolution_0
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: local_scope_resolution_0
:description: local:: scope resolution test
:tags: 18.7.1
*/

class a;
    rand int x;
endclass

function int F(a obj, int x);
    F = obj.randomize() with {x < local::x; };
endfunction

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_item
      (class_property
        (random_qualifier)
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier)))))))
  (function_declaration
    (function_body_declaration
      (data_type_or_void
        (data_type
          (integer_atom_type)))
      name: (simple_identifier)
      (tf_port_list
        (tf_port_item
          (data_type_or_implicit
            (data_type
              (simple_identifier)))
          name: (simple_identifier))
        (tf_port_item
          (data_type_or_implicit
            (data_type
              (integer_atom_type)))
          name: (simple_identifier)))
      (function_statement_or_null
        (function_statement
          (statement
            (statement_item
              (blocking_assignment
                (operator_assignment
                  (variable_lvalue
                    (hierarchical_identifier
                      (simple_identifier)))
                  (assignment_operator)
                  (expression
                    (primary
                      (function_subroutine_call
                        (subroutine_call
                          (method_call
                            (primary
                              (hierarchical_identifier
                                (simple_identifier)))
                            (method_call_body
                              (randomize_call
                                (constraint_block
                                  (constraint_block_item
                                    (constraint_expression
                                      (expression_or_dist
                                        (expression
                                          left: (expression
                                            (primary
                                              (hierarchical_identifier
                                                (simple_identifier))))
                                          right: (expression
                                            (primary
                                              (class_qualifier)
                                              (hierarchical_identifier
                                                (simple_identifier)))))))))))))))))))))))))
