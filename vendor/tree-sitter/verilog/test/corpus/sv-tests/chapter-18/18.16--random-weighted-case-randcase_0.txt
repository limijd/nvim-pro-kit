============================================
sv-tests/chapter-18/18.16--random-weighted-case-randcase_0
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: random_weighted_case_randcase_0
:description: randcase test
:tags: 18.16
:type: simulation elaboration parsing
*/

function int F();
    int a;
    randcase
        0 : a = 5;
        1 : a = 10;
    endcase
    return a;
endfunction

module top;
   int x;
   initial begin
      x = F();
      $display(":assert: (10 == %d)", x);
   end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (function_declaration
    (function_body_declaration
      (data_type_or_void
        (data_type
          (integer_atom_type)))
      name: (simple_identifier)
      (block_item_declaration
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier)))))
      (function_statement_or_null
        (function_statement
          (statement
            (statement_item
              (randcase_statement
                (randcase_item
                  (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (blocking_assignment
                          (operator_assignment
                            (variable_lvalue
                              (hierarchical_identifier
                                (simple_identifier)))
                            (assignment_operator)
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))))))))
                (randcase_item
                  (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (blocking_assignment
                          (operator_assignment
                            (variable_lvalue
                              (hierarchical_identifier
                                (simple_identifier)))
                            (assignment_operator)
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number)))))))))))))))))
      (function_statement_or_null
        (function_statement
          (statement
            (statement_item
              (jump_statement
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))))))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))
    (data_declaration
      (data_type_or_implicit
        (data_type
          (integer_atom_type)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          name: (simple_identifier))))
    (initial_construct
      (statement_or_null
        (statement
          (statement_item
            (seq_block
              (statement_or_null
                (statement
                  (statement_item
                    (blocking_assignment
                      (operator_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)))
                        (assignment_operator)
                        (expression
                          (primary
                            (function_subroutine_call
                              (subroutine_call
                                (tf_call
                                  (hierarchical_identifier
                                    (simple_identifier))))))))))))
              (statement_or_null
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (system_tf_call
                          (system_tf_identifier)
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal
                                    (quoted_string)))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))))))))
