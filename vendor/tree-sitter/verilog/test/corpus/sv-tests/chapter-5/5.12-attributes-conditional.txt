============================================
sv-tests/chapter-5/5.12-attributes-conditional
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: attributes-conditional
:description: Assing attributes to a conditional operator
:tags: 5.12
*/

module top();
  bit a, b, c, d;

  initial begin
    a = b ? (* no_glitch *) c : d;
  end

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (integer_vector_type)))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier))
          (variable_decl_assignment
            name: (simple_identifier))
          (variable_decl_assignment
            name: (simple_identifier))
          (variable_decl_assignment
            name: (simple_identifier)))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (blocking_assignment
                        (operator_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (assignment_operator)
                          (expression
                            (conditional_expression
                              (cond_predicate
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier)))))
                              (attribute_instance
                                (attr_spec
                                  (simple_identifier)))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))))
