============================================
sv-tests/chapter-5/5.6.4--compiler-directives-preprocessor-macro_1
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: compiler_directives_preprocessor_macro_1
:description: Read preprocessing macro from template (:defines: marker)
:tags: 5.6.4
:defines: VAR_1=2 VAR_2=5
*/

module top();
int a = `VAR_1 + `VAR_2;

initial begin
    if (a == 7)
	$display(":assert:(True)");
    else
	$display(":assert:(False)");
end

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (integer_atom_type)))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)
            (expression
              left: (expression
                (text_macro_usage
                  (simple_identifier)))
              right: (expression
                (text_macro_usage
                  (simple_identifier))))))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (conditional_statement
                        (cond_predicate
                          (expression
                            left: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            right: (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))))
                        (statement_or_null
                          (statement
                            (statement_item
                              (subroutine_call_statement
                                (subroutine_call
                                  (system_tf_call
                                    (system_tf_identifier)
                                    (list_of_arguments
                                      (expression
                                        (primary
                                          (primary_literal
                                            (string_literal
                                              (quoted_string))))))))))))
                        (statement_or_null
                          (statement
                            (statement_item
                              (subroutine_call_statement
                                (subroutine_call
                                  (system_tf_call
                                    (system_tf_identifier)
                                    (list_of_arguments
                                      (expression
                                        (primary
                                          (primary_literal
                                            (string_literal
                                              (quoted_string))))))))))))))))))))))))
