============================================
sv-tests/chapter-8/8.7--constructor_param
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: constructor_param
:description: class constructor with arguments test
:tags: 8.7
:type: simulation elaboration parsing
:unsynthesizable: 1
*/
module class_tb ();
	class test_cls;
		int a;
		function new(int def = 42);
			a = def;
		endfunction
	endclass

	initial begin
		test_cls test_obj = new(37);

		$display(":assert:(%d == 37)", test_obj.a);
	end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (class_declaration
        name: (simple_identifier)
        (class_item
          (class_property
            (data_declaration
              (data_type_or_implicit
                (data_type
                  (integer_atom_type)))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  name: (simple_identifier))))))
        (class_item
          (class_method
            (class_constructor_declaration
              (class_constructor_arg_list
                (class_constructor_arg
                  (tf_port_item
                    (data_type_or_implicit
                      (data_type
                        (integer_atom_type)))
                    name: (simple_identifier)
                    (expression
                      (primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number)))))))))
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (blocking_assignment
                        (operator_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (assignment_operator)
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier)))))))))))))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (block_item_declaration
                  (data_declaration
                    (data_type_or_implicit
                      (data_type
                        (simple_identifier)))
                    (list_of_variable_decl_assignments
                      (variable_decl_assignment
                        name: (simple_identifier)
                        (class_new
                          (list_of_arguments
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (system_tf_call
                            (system_tf_identifier)
                            (list_of_arguments
                              (expression
                                (primary
                                  (primary_literal
                                    (string_literal
                                      (quoted_string)))))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)
                                    (simple_identifier)))))))))))))))))))
