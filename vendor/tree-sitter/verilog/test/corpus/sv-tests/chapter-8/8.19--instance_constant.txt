============================================
sv-tests/chapter-8/8.19--instance_constant
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: instance_constant
:description: class with instance constant variable
:tags: 8.19
:unsynthesizable: 1
*/
module class_tb ();
	class a_cls;
		const int c;
		function new(int val);
			c = 20 * val;
		endfunction
	endclass
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (class_declaration
        name: (simple_identifier)
        (class_item
          (class_property
            (data_type
              (integer_atom_type))
            (simple_identifier)))
        (class_item
          (class_method
            (class_constructor_declaration
              (class_constructor_arg_list
                (class_constructor_arg
                  (tf_port_item
                    (data_type_or_implicit
                      (data_type
                        (integer_atom_type)))
                    name: (simple_identifier))))
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (blocking_assignment
                        (operator_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (assignment_operator)
                          (expression
                            left: (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))
                            right: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))))))))
