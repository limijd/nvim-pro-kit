============================================
sv-tests/chapter-8/8.4--instantiation
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: instantiation
:description: simple class instantiation test
:tags: 8.4
:unsynthesizable: 1
*/
module class_tb ();
	class test_cls;
		int a;
	endclass

	test_cls test_obj;

	initial begin
		if(test_obj == null) test_obj = new;
	end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_item
      (class_declaration
        name: (simple_identifier)
        (class_item
          (class_property
            (data_declaration
              (data_type_or_implicit
                (data_type
                  (integer_atom_type)))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  name: (simple_identifier))))))))
    (module_item
      (data_declaration
        (data_type_or_implicit
          (data_type
            (simple_identifier)))
        (list_of_variable_decl_assignments
          (variable_decl_assignment
            name: (simple_identifier)))))
    (module_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (conditional_statement
                        (cond_predicate
                          (expression
                            left: (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            right: (expression
                              (primary))))
                        (statement_or_null
                          (statement
                            (statement_item
                              (blocking_assignment
                                (hierarchical_identifier
                                  (simple_identifier))
                                (class_new)))))))))))))))))
