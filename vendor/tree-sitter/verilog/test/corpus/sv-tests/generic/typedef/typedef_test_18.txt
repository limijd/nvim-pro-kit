============================================
sv-tests/generic/typedef/typedef_test_18
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: typedef_test_18
:description: Test
:tags: 6.18
*/
parameter K = 9;

typedef struct {
  rand bit i;
  randc integer b[K:0];
} randstruct;

module test;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (parameter_declaration
    (list_of_param_assignments
      (param_assignment
        (simple_identifier)
        (constant_param_expression
          (constant_mintypmax_expression
            (constant_expression
              (constant_primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number)))))))))))
  (data_declaration
    (type_declaration
      (data_type
        (struct_union)
        (struct_union_member
          (random_qualifier)
          (data_type_or_void
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))
        (struct_union_member
          (random_qualifier)
          (data_type_or_void
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier)
              (unpacked_dimension
                (constant_range
                  (constant_expression
                    (constant_primary
                      (simple_identifier)))
                  (constant_expression
                    (constant_primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number))))))))))))
      type_name: (simple_identifier)))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))))
