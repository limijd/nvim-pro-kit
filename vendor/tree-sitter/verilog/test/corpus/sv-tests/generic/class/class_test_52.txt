============================================
sv-tests/generic/class/class_test_52
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: class_test_52
:description: Test
:tags: 6.15 8.3
:unsynthesizable: 1
*/
class uvm_sequence_item;
endclass
class how_wide #(type DT=int) extends uvm_sequence_item;
  localparam Max_int = {$bits(DT) - 1{1'b1}};
endclass

module test;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier))
  (class_declaration
    name: (simple_identifier)
    (parameter_port_list
      (parameter_port_declaration
        (type_parameter_declaration
          (list_of_type_assignments
            (type_assignment
              name: (simple_identifier)
              value: (data_type
                (integer_atom_type)))))))
    (class_type
      (simple_identifier))
    (class_item
      (local_parameter_declaration
        (list_of_param_assignments
          (param_assignment
            (simple_identifier)
            (constant_param_expression
              (constant_mintypmax_expression
                (constant_expression
                  (constant_primary
                    (constant_multiple_concatenation
                      (constant_expression
                        left: (constant_expression
                          (constant_primary
                            (constant_function_call
                              (function_subroutine_call
                                (subroutine_call
                                  (system_tf_call
                                    (system_tf_identifier)
                                    (list_of_arguments
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)))))))))))
                        right: (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number)))))))
                      (constant_concatenation
                        (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (binary_number
                                  size: (unsigned_number)
                                  base: (binary_base)
                                  value: (binary_value)))))))))))))))))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))))
