============================================
sv-tests/generic/class/class_test_30
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: class_test_30
:description: Test
:tags: 6.15 8.3
:unsynthesizable: 1
*/
class Foo;
integer size;
function new (integer size);
  begin
    this.size = size;
  end
endfunction
task print();
  begin
    $write("Hello, world!");
  end
endtask
endclass

module test;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (class_declaration
    name: (simple_identifier)
    (class_item
      (class_property
        (data_declaration
          (data_type_or_implicit
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              name: (simple_identifier))))))
    (class_item
      (class_method
        (class_constructor_declaration
          (class_constructor_arg_list
            (class_constructor_arg
              (tf_port_item
                (data_type_or_implicit
                  (data_type
                    (integer_atom_type)))
                name: (simple_identifier))))
          (function_statement_or_null
            (function_statement
              (statement
                (statement_item
                  (seq_block
                    (statement_or_null
                      (statement
                        (statement_item
                          (blocking_assignment
                            (operator_assignment
                              (variable_lvalue
                                (implicit_class_handle)
                                (hierarchical_identifier
                                  (simple_identifier)))
                              (assignment_operator)
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))
    (class_item
      (class_method
        (task_declaration
          (task_body_declaration
            name: (simple_identifier)
            (statement_or_null
              (statement
                (statement_item
                  (seq_block
                    (statement_or_null
                      (statement
                        (statement_item
                          (subroutine_call_statement
                            (subroutine_call
                              (system_tf_call
                                (system_tf_identifier)
                                (list_of_arguments
                                  (expression
                                    (primary
                                      (primary_literal
                                        (string_literal
                                          (quoted_string)))))))))))))))))))))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))))
